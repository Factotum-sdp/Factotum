import java.util.concurrent.TimeUnit

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'jacoco'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'com.google.gms.google-services'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-kapt'
    id 'kotlin-android'
    id 'org.gradle.test-retry'
}

android {
    namespace 'com.github.factotum_sdp.factotum'
    compileSdk 33

    defaultConfig {
        applicationId 'com.github.factotum_sdp.factotum'
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE-notice.md'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled true
        }
    }

    testOptions {
        animationsDisabled = true
        unitTests.all {
            useJUnitPlatform()
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    androidTestImplementation 'androidx.arch.core:core-testing:2.2.0'
    debugImplementation "androidx.fragment:fragment-testing:1.5.7"
    implementation 'androidx.core:core-ktx:1.10.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.fragment:fragment-ktx:1.5.7'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.navigation:navigation-dynamic-features-fragment:2.5.3'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'androidx.test.espresso:espresso-contrib:3.5.1'
    implementation 'androidx.viewpager2:viewpager2:1.1.0-beta01'

    implementation 'com.github.bumptech.glide:glide:4.15.1'
    kapt 'com.github.bumptech.glide:compiler:4.15.1'
    implementation 'com.google.android.gms:play-services-auth:20.5.0'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-database-ktx:20.2.0'
    implementation 'com.google.firebase:firebase-storage-ktx:20.1.0'
    implementation platform('com.google.firebase:firebase-bom:31.2.3') // Firebase BOM


    testImplementation 'io.mockk:mockk:1.13.5'
    androidTestImplementation 'io.mockk:mockk-android:1.13.5'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testImplementation 'org.mockito:mockito-core:5.3.0'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'
    testImplementation "org.jetbrains.kotlin:kotlin-test:1.8.20"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.5.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    debugImplementation "androidx.test:monitor:1.6.1"
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.3.0-alpha03'
    androidTestImplementation 'androidx.navigation:navigation-testing:2.5.3'
}


tasks.withType(Test) {
    maxParallelForks = 1
    retry {
        maxRetries = 3
        maxFailures = 20
        failOnPassedAfterRetry = false
        afterSuite {
            retryOnFailures()
        }
    }

    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*', '**/databinding/*']
}


task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    reports {
        xml.required = true
        html.required = true
    }


    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            'android/**/*.*',
    ]
    def debugTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: project.buildDir, includes: [
            'outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec',
            'outputs/code_coverage/debugAndroidTest/connected/*/coverage.ec'
    ]))
}

connectedCheck {
    finalizedBy jacocoTestReport
}
